name: Scrape Duolingo API
on:
  schedule:
    - cron: '0 0,8,16 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
      - name: Create JSON directory
        run: mkdir -p json
      - name: Scrape API and append to JSON
        run: |
          usernames=("Margherita427254" "Katarina451478" "000980.98dceJWb" "Kesi271320" "Aleksandra304260" "mw9R16" "JoSerrao1" "MongBalzs1" "Gosia651728" "SvitlanaDol" "ClaudiaVan847027" "ThomasSena12" "Marco253734" "Kristin131790" "Martial576200" "EaJK3" "Daniela172883" "detached" "Andrea231616" "Solky13" "Agnes312826" "tauferer" "Fabienne886023" "RosaNinja" "Inger436396" "Flo318108" "Esther301073" "Mashaagoyo" "Mathias419853" "SebGru")
          for username in "${usernames[@]}"; do
            api_response=$(curl -s "https://www.duolingo.com/2017-06-30/users?username=${username}")
            
            # Improved error checking
            if [[ -z "$api_response" ]]; then
              echo "No response for username: ${username}"
              continue
            elif [[ $api_response == *"error"* || $api_response == *"not found"* ]]; then
              echo "Error or not found for username: ${username}"
              continue
            fi

            # Handling JSON file creation and appending
            json_file="json/${username}.json"
            if [[ -f "$json_file" ]]; then
              existing_data=$(cat "$json_file")
              new_data="${existing_data}\n${api_response}"
            else
              echo "Creating new file for username: ${username}"
              new_data="${api_response}"
            fi
            echo -e "$new_data" > "$json_file"
          done
      - name: Commit and push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add json
          git commit -m "Update JSON data" || echo "No changes to commit"
          git push || echo "No changes to push"
